`timescale 1ns / 1ps
module anntest;
reg clk;
reg reset;
reg [31:0] w1, w2, w3, w4,x;
wire done;
Finalann  Ann_inst (.clk(clk),.reset(reset),.w1(w1),.w2(w2),.w3(w3),.w4(w4),.x(x),.done(done));
initial begin
    clk = 0;reset = 1;#10 reset= 0;end
always #5 clk = ~clk;
initial begin
////////////W1_load is a m1*n1=5*4 matrix at thew ist layer no.of node point 5 and number of nuron is 4///////////////////
        #10 w1=-32'd1; #10 w1=32'd1;  #10 w1=32'd1;   #10 w1=32'd0;   
        #20 w1=32'd1;  #10 w1=-32'd1; #10 w1=-32'd0;  #10 w1=32'd0;  
        #20 w1=-32'd0; #10 w1=-32'd0; #10 w1=-32'd1;  #10 w1=32'd2;  
        #20 w1=-32'd0; #10 w1=-32'd1; #10 w1=-32'd0;  #10 w1=32'd1;  
        #20 w1=32'd2;  #10 w1=-32'd0; #10 w1=-32'd0;  #10 w1=-32'd1;  
////////////////m2*m1=5*5 weight matrix/////////////////////////2nd hidden layer/////////////////////////////////////////      
        #30 w2=32'd3;  #10 w2=-32'd2; #10 w2=-32'd2; #10 w2=32'd1;#10 w2=-32'd1;
        #20 w2=-32'd0; #10 w2=32'd1;  #10 w2=32'd1;  #10 w2=32'd0;#10 w2=32'd1;
        #20 w2=32'd1;  #10 w2=-32'd2; #10 w2=32'd1;  #10 w2=32'd0;#10 w2=32'd2;
        #20 w2=32'd3;  #10 w2=-32'd0; #10 w2=-32'd0; #10 w2=-32'd0;#10 w2=32'd1;
        #20 w2=-32'd4; #10 w2=32'd1;  #10 w2=-32'd2; #10 w2=-32'd1;#10 w2=-32'd0;                    
 //////////////////////////////m3*m2=5*5 weight matrix//////////////////////3rd hidden layer//////////////////////////// 
        #30 w3=-32'd1; #10 w3=-32'd1; #10 w3=32'd1;  #10 w3=32'd1; #10 w3=32'd0;
        #20 w3=32'd2;  #10 w3=32'd2;  #10 w3=32'd0;  #10 w3=32'd1; #10 w3=-32'd1;
        #20 w3=32'd1;  #10 w3=-32'd1;  #10 w3=32'd0; #10 w3=-32'd0;#10 w3=32'd0;
        #20 w3=-32'd2; #10 w3=32'd4;  #10 w3=32'd1;  #10 w3=32'd1; #10 w3=32'd0;
        #20 w3=32'd0;  #10 w3=-32'd5; #10 w3=-32'd1; #10 w3=32'd2; #10 w3=-32'd0;
 /////////////////n4*m3=5*5 weight matrix//////////////////////////////////4Th hidden layer 
        #30 w4=32'd1;  #10 w4=32'd1;  #10 w4=32'd0; #10 w4=32'd1;#10 w4=32'd1;
        #20 w4=32'd1;  #10 w4=-32'd1; #10 w4=32'd1; #10 w4=32'd1;#10 w4=-32'd1;
        #20 w4=-32'd2; #10 w4=32'd1;  #10 w4=32'd2; #10 w4=32'd0;#10 w4=-32'd0;
        #20 w4=-32'd0; #10 w4=-32'd0; #10 w4=-32'd1;#10 w4=32'd2;#10 w4=-32'd0;
        #20 w4=32'd1;  #10 w4=-32'd0; #10 w4=-32'd1;#10 w4=32'd0;#10 w4=32'd0;
///////////////////////////this is output most compressed 4*4 matrixe//////////////////////////////////      
        #30 x=-32'd26; #10 x=32'd15;   #10 x=32'd3;  #10 x=-32'd5;  
        #20 x=-32'd18; #10 x=-32'd0;  #10 x=-32'd34; #10 x=32'd13;  
        #20 x=32'd0;   #10 x=32'd6;   #10 x=-32'd0;  #10 x=32'd0;  
        #20 x=32'd0;   #10 x=32'd24;   #10 x=32'd1;  #10 x=-32'd8;        
end
endmodule